<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="customer">
 	<select id="cMypageList" parameterType="string" resultType="LoginDTO">
 		 select id, passwd, name, mail, phone from jaccount where id = #{id}
 	</select>
 	
 	<update id="updateCustomer" parameterType="LoginDTO">
    	update jaccount set name = #{name}, passwd = #{passwd}, mail = #{mail}, phone = #{phone} where id =#{id}
	</update>
 	
	<delete id="secessionCustomer" parameterType="String">
		 delete from jaccount where id= #{id}
	</delete>
	
	<select id ="pastOrderList" parameterType="String" resultType="OrderDTO">
      select a.id, orderid, to_char(a.indate, 'yyyy-mm-dd') as indate, a.totprice, b.storename, j.menuname, b.storeid 
      from jorder a
      join jstore b on a.storeid = b.storeid
      join jmenu j on a.menuid  = j.menuid 
      where a.id = #{id}
   </select>
	
	<select id ="customerCoupon" parameterType="java.util.Map" resultType="UserCouponDTO">
		SELECT u.usercid, u.couponid, a.couname, a.coucontent, a.storeid, s.storename 
			FROM jusercoupon u INNER JOIN jcoupon a ON a.couponid = u.couponid
			INNER JOIN jstore s ON a.storeid = s.storeid WHERE u.id = #{id} AND s.STOREID = #{storeid}
	</select>
	
	
	
	<select id="viewStore" parameterType="int" resultType="storeDTO">
		select * from jstore where storeid = #{storeid}
	</select>
	<!-- 이재홍 작성 -->
	<select id="viewStoreInfo" resultType="viewstoreDTO" parameterType="int">
		select jm.menuid, jm.storeid, jm.jscateid,jm.mqty,
       jm.menuname, jm.menucontent, jm.img, jm.price, js.jstorename,
       (select count(*) from jmenu where storeid = jm.storeid and jscateid = jm.jscateid) as cnt
		from jmenu jm
		join jstorecate js on jm.storeid = js.storeid and jm.jscateid = js.jscateid and jm.storeid = #{storeid}
		order by jscateid, menuid
	</select>
	<select id="storeList" resultType="StoreDTO">
    <!-- 윤장호 0703수정 --> 
        SELECT s.storeid, s.storename, s.CATEID, s.STORECONTENT, s.ID, s.IMG, s.COUPONID, s.ADDRESS, s.DETAILADDRESS, s.EXTRAADDRESS, s.POSTCODE, s.RUN, s.STOPDATE,
       COUNT(r.storeid) AS row_count,
       COUNT(r.reply) AS reply_count,
        ROUND(AVG(r.GRADE), 1) AS rev_avg
      FROM jstore s
      LEFT JOIN jreview r ON s.storeid = r.storeid
      GROUP BY s.storeid, s.storename, s.CATEID, s.STORECONTENT, s.ID, s.IMG, s.COUPONID, s.ADDRESS, s.DETAILADDRESS, s.EXTRAADDRESS, s.POSTCODE, s.RUN, s.STOPDATE
      ORDER BY row_count DESC
        
   </select>
   <select id="storeListByCate" parameterType="String" resultType="storeDTO">
   		select * from jstore where cateid = #{cateid}
   </select>
   <select id="cateList" resultType="StoreDTO">
         select * from jcate
   </select>
<select id="cateStoreList" parameterType="String" resultType="storeDTO">
         <!--  select storeid, storename, js.cateid, 
   storecontent, id, js.img, couponid, 
   address, detailaddress, 
   extraaddress, postcode, jc.catename  
   from jstore js, jcate jc where js.cateid = jc.cateid and js.cateid = #{cateid}
            0703윤장호수정-->
    SELECT s.storeid, s.storename, s.CATEID, s.STORECONTENT, s.ID, s.IMG, s.COUPONID, s.ADDRESS, s.DETAILADDRESS, s.EXTRAADDRESS, s.POSTCODE, s.RUN, s.STOPDATE,
       COUNT(r.storeid) AS row_count,
       COUNT(r.reply) AS reply_count,
       ROUND(AVG(r.GRADE), 1) AS rev_avg
      FROM jstore s
      LEFT JOIN jreview r ON s.storeid = r.storeid
      WHERE s.CATEID = #{cateid}
      GROUP BY s.storeid, s.storename, s.CATEID, s.STORECONTENT, s.ID, s.IMG, s.COUPONID, s.ADDRESS, s.DETAILADDRESS, s.EXTRAADDRESS, s.POSTCODE, s.RUN, s.STOPDATE
      ORDER BY row_count DESC  
   </select>
   <select id="basketList" resultType="MenuDTO" parameterType="list">
        select * from jmenu where menuid in
        <foreach item="id" index="index" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="basket" parameterType="String" resultType="BasketDTO">
       select * from jbasket join jmenu on jbasket.menuid = jmenu.menuid where id =#{id}
    </select>
    
    <insert id="insertBasket" parameterType="BasketDTO">
    	INSERT INTO JBASKET VALUES (JBASKET_SEQ.NEXTVAL, #{id}, #{qty}, #{totprice}, #{menuid})
    </insert>
    
    <select id="listReview" resultType="reviewDTO" parameterType="int">
    	select * from jreview where storeid = #{storeid}
    </select>
       <insert id="insertReview" parameterType="reviewDTO">
        insert into jreview (reviewid, storeid, revcotent, reply, grade, img, reviewdate, id) values (jreview_seq.nextval, #{storeid}, #{revcotent}, null, #{grade}, #{img}, sysdate, #{id}) 
   </insert>
    <insert id="addOrder">
    INSERT INTO jorder (orderid, id, indate, qty, totprice, storeid, menuid)
    SELECT jorder_seq.nextval, id, sysdate, qty, totprice, #{storeid}, menuid 
    FROM JBASKET
    WHERE menuid = #{menuid} AND id = #{id}
	</insert>
    <delete id="deleteBasket" parameterType="String">
       delete from jbasket where id= #{userId}
   </delete>
     <delete id="basketDelete" parameterType="String">
       delete from jbasket where basketid= #{basketid}
   </delete>
   <delete id="orderDelete" parameterType="String">
       delete from jorder where orderid= #{orderid}
   </delete>
   <insert id="directOrder" parameterType="java.util.List">
	  INSERT INTO JORDER (orderid, id, indate, qty, totprice, storeid, menuid)
	  SELECT JORDER_SEQ.NEXTVAL, T.* FROM
	  (
	    <foreach collection="list" item="item" separator="UNION ALL">
	      SELECT #{item.id} as id, SYSDATE as indate, #{item.qty} as qty, 
	             #{item.totprice} as totprice, #{item.storeid} as storeid, #{item.menuid} as menuid
	      FROM DUAL
	    </foreach>
	  ) T
	</insert>
	<select id="checkBasket" parameterType="String" resultType="String">
		SELECT j2.STOREID FROM JBASKET j, JMENU j2 WHERE j.MENUID = j2.MENUID and j.id = #{id}
	</select>
	
	<!--  -->
	<select id ="CouponList" parameterType="String" resultType="UserCouponDTO">
		SELECT u.usercid, u.couponid, a.couname, a.coucontent, a.storeid, s.storename 
			FROM jusercoupon u INNER JOIN jcoupon a ON a.couponid = u.couponid
			INNER JOIN jstore s ON a.storeid = s.storeid WHERE u.id = #{id} 
	</select>
	
	<select id ="storecoupon" parameterType="String" resultType="CouponDTO">
      select * from jcoupon where storeid = #{storeid}
   </select>
   
   <insert id="getCoupon" parameterType="map"> 
   INSERT INTO jusercoupon (usercid, couponid, id, indate, storeid) 
   SELECT jusercoupon_seq.NEXTVAL, j.couponid, #{id}, sysdate, j.storeid FROM jcoupon j 
   WHERE j.couponid = #{couponid} 
   </insert>
   
   <select id="checkCoupon" parameterType="map" resultType="int"> 
   SELECT COUNT(*) FROM jusercoupon WHERE id = #{id,jdbcType=VARCHAR} AND couponid = #{couponid,jdbcType=INTEGER} 
   </select>
    <update id="updateBasketQty" parameterType="java.util.Map">
       UPDATE jbasket SET qty = #{qty}, totprice= (SELECT (totprice/qty)*#{qty} FROM jbasket WHERE basketid = #{menuid}) WHERE basketid = #{menuid}
    </update>
	<delete id="userCouponDel" parameterType="map">
       delete from jusercoupon where usercid = #{usercid,jdbcType=NUMERIC}
   </delete>
	
 </mapper>